/***************************************************************************/
/*http://www.zjarm.com							                           */
/*矩阵键盘测试程序							                               */
/*目标器件：ATmega128							                           */
/*晶振:RC 1MHZ								                               */
/*编译环境：ICCAVR 6.31A						                           */
/*E-Mail:98dian@163.com                                                    */
/*时间：2008年08月08日                                                     */
/***************************************************************************/

/*********************************包含头文件********************************/
#include <iom64v.h>
#include <macros.h>
 
unsigned char key_state=0;
/******************************************************************************* 
* 函数名称: delay_us()
* 入口参数: microsecond : 输入延时微秒的时间
* 出口参数: 
* 功能描述: 微秒的延时   	  	
*******************************************************************************/ 
void delay_us(unsigned int microsecond) 
{      
    do 
	{ 
        microsecond--; 
	}         
    while (microsecond>1); 
}


/******************************************************************************* 
* 函数名称: delay_ms()
* 入口参数: millisecond : 输入延时毫秒的时间
* 出口参数: 
* 功能描述: 毫秒的延时  	
*******************************************************************************/ 
void delay_ms(unsigned int millisecond) 
{      
    while (millisecond--)
	{
        delay_us(999);
	}  
}
void find_key(unsigned char n)
{
    switch(n)
	{
	    case 1:PORTF = 4;
	      break;
		case 2:PORTF = 8;
	      break;
    	case 3:PORTF = 12;
	      break;
        case 4:PORTF = 16;
	      break;
	    case 5:PORTF = 20;
	      break;
	    case 6:PORTF = 24;
	      break;
	    case 7:PORTF = 28;
	      break;
        case 8:PORTF = 32;
	      break;
	    case 9:PORTF = 36;
	      break;
	    default:
	      break;	
	}	  
}
/******************************************************************************* 
* 函数名称: void key_scan(void)
* 入口参数: 
* 出口参数: 
* 功能描述: 键盘扫描
*******************************************************************************/
void key_scan(void)
{
         //key_scan_state = 1;
 	 	 ////第一行////////////////////////////////////////
         PORTE = 0XDF;
		 delay_ms(10);
		 if((PINE&0x1F)!=0x1F)
    	  {
    	   	  delay_ms(20);
        	  if((PINE&0x1F)!=0x1F)
        	  {
        	   	if((PINE&0x10)==0)//E5-E4	
        		{
				   key_state = 7;
				   while((PINE&0x10)==0);
				}
        		else if((PINE&0x08)==0)//E5-E3	
        		{
				   key_state = 4;
				   while((PINE&0x08)==0);
				}
    			else if((PINE&0x04)==0)//E5-E2	
        		{
				   key_state = 1;
				   while((PINE&0x04)==0);
				}
				delay_ms(1);
			  }
          }
		 ////第二行////////////////////////////////////////
		 PORTE = 0XBF;
		 delay_ms(10);
		 if((PINE&0x1F)!=0x1F)
    	  {
    	   	  delay_ms(20);
        	  if((PINE&0x1F)!=0x1F)
        	  {
        	   	if((PINE&0x10)==0)//E6-E4
        		{
				   key_state = 8;
				   while((PINE&0x10)==0);
				}
        		else if((PINE&0x08)==0)	//E6-E3		
        		{
				   key_state = 5;
				   while((PINE&0x08)==0);
				}
    			else if((PINE&0x04)==0)//E6-E2		
        		{
				   key_state = 2;
				   while((PINE&0x04)==0);
				}
				delay_ms(1);
			  }
          }
		  ////第3行////////////////////////////////////////
		 PORTE = 0X7F;
		 delay_ms(10);
		 if((PINE&0x1F)!=0x1F)
    	  {
    	   	  delay_ms(20);
        	  if((PINE&0x1F)!=0x1F)
        	  {
        	   	if((PINE&0x10)==0)//E7-E4
        		{
				  key_state = 9;
				  while((PINE&0x10)==0);
				}
        		else if((PINE&0x08)==0)//E7-E3
        		{
				  key_state = 6;
				  while((PINE&0x08)==0);
				}
    			else if((PINE&0x04)==0)//E7-E2
        		{
				   key_state = 3;
				   while((PINE&0x04)==0);
				}
        		delay_ms(1);
			  }
          }
}
void port_int(void)
{
     PORTB = 0x01;
     DDRB  = 0x01;
	 DDRF = 0XFF;
     DDRE  = 0xE0;//高3位为写,低5位为读
     PORTE = 0x1F;
}
/****************************************************************************
函数功能:延时子程序
入口参数:
出口参数:
****************************************************************************/
void delay(void)
{
 	 int i;
  	 for(i=0;i<200;i++);
}
void delay_us(unsigned int microsecond) 
{      
    do 
	{ 
        microsecond--; 
	}         
    while (microsecond>1); 
}
/******************************************************************************* 
* 函数名称: delay_ms()
* 入口参数: millisecond : 输入延时毫秒的时间
* 出口参数: 
* 功能描述: 毫秒的延时  	
*******************************************************************************/ 
void delay_ms(unsigned int millisecond) 
{      
    while (millisecond--)
	{
        delay_us(999);
	}  
}
/****************************************************************************
函数功能:主程序
入口参数:
出口参数:
****************************************************************************/
void main(void)
{
 	 int j;
 	 int keyvalue=0;
	 port_int();
	 PORTB |= BIT(0);//开蜂鸣器
     delay_ms(100); 
     PORTB &= ~BIT(0);//关蜂鸣器
	 while(1)
	 {
	    key_scan(); 
		find_key(key_state);
	 }
}